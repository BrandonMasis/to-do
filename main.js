(()=>{"use strict";function e(e,t){if(t.length<e)throw new TypeError(e+" argument"+(e>1?"s":"")+" required, but only "+t.length+" present")}function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},t(e)}function n(n){e(1,arguments);var s=Object.prototype.toString.call(n);return n instanceof Date||"object"===t(n)&&"[object Date]"===s?new Date(n.getTime()):"number"==typeof n||"[object Number]"===s?new Date(n):("string"!=typeof n&&"[object String]"!==s||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments"),console.warn((new Error).stack)),new Date(NaN))}function s(e){if(null===e||!0===e||!1===e)return NaN;var t=Number(e);return isNaN(t)?t:t<0?Math.ceil(t):Math.floor(t)}var a={};function o(){return a}function i(t,a){var i,r,c,l,d,u,v,h;e(1,arguments);var k=o(),p=s(null!==(i=null!==(r=null!==(c=null!==(l=null==a?void 0:a.weekStartsOn)&&void 0!==l?l:null==a||null===(d=a.locale)||void 0===d||null===(u=d.options)||void 0===u?void 0:u.weekStartsOn)&&void 0!==c?c:k.weekStartsOn)&&void 0!==r?r:null===(v=k.locale)||void 0===v||null===(h=v.options)||void 0===h?void 0:h.weekStartsOn)&&void 0!==i?i:0);if(!(p>=0&&p<=6))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");var y=n(t),b=y.getDay(),f=(b<p?7:0)+b-p;return y.setDate(y.getDate()-f),y.setHours(0,0,0,0),y}function r(t,a){var i,r,c,l,d,u,v,h;e(1,arguments);var k=o(),p=s(null!==(i=null!==(r=null!==(c=null!==(l=null==a?void 0:a.weekStartsOn)&&void 0!==l?l:null==a||null===(d=a.locale)||void 0===d||null===(u=d.options)||void 0===u?void 0:u.weekStartsOn)&&void 0!==c?c:k.weekStartsOn)&&void 0!==r?r:null===(v=k.locale)||void 0===v||null===(h=v.options)||void 0===h?void 0:h.weekStartsOn)&&void 0!==i?i:0);if(!(p>=0&&p<=6))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");var y=n(t),b=y.getDay(),f=6+(b<p?-7:0)-(b-p);return y.setDate(y.getDate()+f),y.setHours(23,59,59,999),y}const c=document.querySelector("#today-option"),l=document.querySelector("#weekly-option"),d='<div class="task-container">\n<div class="new-task">+</div>\n</div>\n</div>',u=new Date,v=["January","February","March","April","May","June","July","August","September","October","November","December"],h=[{title:"Do laundry",description:"Wash, dry, and fold clothes",dueDate:new Date,priority:2,subtasks:[{title:"Wash clothes",isChecked:!0},{title:"Dry clothes",isChecked:!1},{title:"Fold clothes",isChecked:!0}],isChecked:!0,project:"Study chess",category:"Piece development"},{title:"Do laundry on nov3",description:"Wash, dry, and fold clothes",dueDate:new Date("2022-10-3"),priority:2,subtasks:[{title:"Wash clothes",isChecked:!0},{title:"Dry clothes",isChecked:!1},{title:"Fold clothes",isChecked:!0},{title:"Wash clothes",isChecked:!1},{title:"Dry clothes",isChecked:!0},{title:"Fold clothes",isChecked:!0}],isChecked:!1,project:"Study chess",category:"Piece development"},{title:"Noviembre 6 test",description:"Wash, dry, and fold clothes",dueDate:new Date("2022-11-12"),priority:2,subtasks:[{title:"Wash clothes",isChecked:!0},{title:"Dry clothes",isChecked:!1},{title:"Fold clothes",isChecked:!0},{title:"Wash clothes",isChecked:!1},{title:"Dry clothes",isChecked:!0},{title:"Fold clothes",isChecked:!0}],isChecked:!1,project:"Study chess",category:"Piece development"}],k=[{name:"Household chores",color:"#0f8cfa",total(){return h.filter((e=>e.project==`${this.name}`)).length},categories:["Introduction","Development","Conclusion"]},{name:"Study chess",color:"#FFFFFF",total(){return h.filter((e=>e.project==`${this.name}`)).length},categories:["Piece development","Watch hikaru","Reach 1000 elo"]}];function p(e,t){return e.priority<t.priority?-1:e.priority>t.priority?1:0}function y(){return h.filter((e=>+e.dueDate==+u)).sort(p)}function b(e){return e.isChecked?"checked":""}function f(t,s,a){t.innerHTML+=`\n  <div class="task-container">\n  <div class="task">\n    <div>\n      <div class="task-check">\n        <div class="round checkp1">\n          <input type="checkbox" class="checkbox" ${b(s)} data-task-id="${s.id}" />\n          <label class="task-label"></label>\n        </div>\n      </div>\n      <div class="task-content">\n        <div class="task-title">${s.title}</div>\n        <div class="task-info">\n          <div>\n            <div class="task-duedate">${v[s.dueDate.getMonth()]} ${function(t){return e(1,arguments),n(t).getDate()}(s.dueDate)}</div>\n            <div>\n              <div class="progress-container">\n                <progress value="30" max="4">75%</progress>\n              </div>\n              <div class="progress-subtask">?/${s.subtasks.length} Subtasks</div>\n            </div>\n          </div>\n          <p class="task-description">\n          ${s.description}\n          </p>\n        </div>\n      </div>\n    </div>\n    <div class="task-options">\n      <div><i class="fa-solid fa-xmark deleteTask"></i></div>\n      <div><i class="fa-solid fa-angle-down dropSubtasks"></i></div>\n    </div>\n  </div>\n\n  ${a}\n  <div class="new-subtask">+</div>\n  </div>`}function g(e){let t="";return null!=e.subtasks&&e.subtasks.forEach((n=>{t+=`\n    <div class="subtask">\n    <div class="task-check">\n      <div class="round checkp3">\n        <input type="checkbox" ${b(n)} class="checkbox" data-task-id="${e.id}" data-subtask-id="${n.id}"/>\n        <label class="subtask-label"></label>\n      </div>\n    </div>\n    <div class="task-content">\n      <div class="task-title">\n       ${n.title}\n      </div>\n    </div>\n    </div>\n  `})),t}function m(){const e=document.querySelectorAll(".task-label"),t=document.querySelectorAll(".subtask-label");e.forEach((e=>{e.addEventListener("click",(()=>{const t=e.parentElement.querySelector(".checkbox");1==h[parseInt(t.getAttribute("data-task-id"))].isChecked?(t.checked=!1,h[parseInt(t.getAttribute("data-task-id"))].isChecked=!1,console.table(h),console.log("Set to false")):(t.checked=!0,h[parseInt(t.getAttribute("data-task-id"))].isChecked=!0)}))})),t.forEach((e=>{e.addEventListener("click",(()=>{const t=e.parentElement.querySelector(".checkbox");(h[parseInt(t.getAttribute("data-task-id"))].subtasks[parseInt(t.getAttribute("data-subtask-id"))].isChecked=!0)?(t.checked=!1,h[parseInt(t.getAttribute("data-task-id"))].subtasks[parseInt(t.getAttribute("data-subtask-id"))].isChecked=!1):(t.checked=!0,h[parseInt(t.getAttribute("data-id"))].isChecked=!0)}))}))}function S(){document.querySelectorAll(".dropSubtasks").forEach((e=>{e.parentElement.addEventListener("click",(t=>{e.parentElement.parentElement.parentElement.parentElement.classList.contains("task-open")?(e.parentElement.parentElement.parentElement.parentElement.classList.remove("task-open"),e.style.cssText="transform: rotate(0deg)"):(e.parentElement.parentElement.parentElement.parentElement.classList.add("task-open"),e.style.cssText="transform: rotate(180deg)")}))}))}function w(){document.querySelectorAll(".new-task").forEach((e=>e.addEventListener("click",(()=>{}))))}c.addEventListener("click",(()=>{document.querySelector(".display-container").innerHTML='\n    <div class="section-title"><h2>Overdue</h2></div>\n\n    <div id="overdue-tasks" class="big-container"></div>\n      \n    <div class="section-title date-heading">\n      <h2>Today</h2>\n      <h4>21 October</h4>\n    </div>\n    <div id="today-tasks" class="big-container">\n     \n    </div>\n\n    <div class="new-task-project">pending</div>',function(){const e=document.querySelector("#today-tasks"),t=document.querySelector("#overdue-tasks");y().forEach((t=>{let n=g(t);f(e,t,n)})),e.innerHTML+=d,h.filter((e=>e.dueDate<u)).forEach((e=>{let n=g(e);f(t,e,n)})),t.innerHTML+=d}(),S(),w(),m()})),l.addEventListener("click",(()=>{document.querySelector(".display-container").innerHTML='<div class="section-title date-heading">\n  <h2>Weekly</h2>\n  <h4 id="actual-week">Oct 30 to Nov 5</h4>\n  </div>\n  <div id="weekly-tasks" class="big-container">\n  \n\n  </div>\n  </div>',function(){const e=document.querySelector("#weekly-tasks");document.querySelector("#actual-week").textContent=`${v[i(new Date).getMonth()]} ${i(new Date).getDate()} to ${v[r(new Date).getMonth()]} ${r(new Date).getDate()}`,h.filter((e=>e.dueDate>=i(u)&&e.dueDate<=r(u))).sort(p).forEach((t=>{let n=g(t);f(e,t,n)})),e.innerHTML+=d}(),S(),w(),m()})),function(){let e=-1;h.forEach((t=>{let n=-1;e+=1,t.id=e,t.subtasks.forEach((e=>{n+=1,e.id=n}))}))}(),function(){const e=document.querySelector("#projects-container");k.forEach((t=>e.innerHTML+=`<div class="project" data-project="${t.name}"><div><span class="project-tag" style="background-color:${t.color}"></span> <h5>${t.name}</h5></div> <div class="optionTotal">${t.total()}</div></div>`)),document.querySelectorAll(".project").forEach((e=>{e.addEventListener("click",(()=>{let t=k.filter((t=>t.name==`${e.getAttribute("data-project")}`))[0];!function(e,t){const n=document.querySelector(".display-container");n.innerHTML=`<div class="section-title project-heading">\n  <div class="square" style=background-color:${t.color}></div>\n  <h2>${t.name}</h2>\n  </div>`;for(let e=0;e<t.categories.length;e++)n.innerHTML+=`<div class="subtitle"><h3>${t.categories[e]}</h3></div>\n    <div data-project="${t.name}" data-category="${t.categories[e]}" class="big-container">`;console.log(e)}(h.filter((t=>t.project==`${e.getAttribute("data-project")}`)),t),function(e){let t=(n=e.name,h.filter((e=>e.project==n)).sort(p));var n;document.querySelectorAll(".big-container").forEach((e=>{let n=function(e,t){return e.filter((e=>e.category==`${t.getAttribute("data-category")}`))}(t,e);n.forEach((t=>{let n=g(t);f(e,t,n)})),e.innerHTML+=d})),m()}(t),S()}))}))}(),function(){const e=document.querySelector("#today-option .optionTotal"),t=document.querySelector("#weekly-option .optionTotal");e.textContent=`${y().length}`,t.textContent=`${y().length}`}()})();